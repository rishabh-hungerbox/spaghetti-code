"""
Django settings for auth project.

Generated by 'django-admin startproject' using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from dotenv import load_dotenv
from sshtunnel import SSHTunnelForwarder
import paramiko


load_dotenv()
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# SECURITY WARNING: keep the secret key used in production secret!
# Django uses this for cryptographic signing
SECRET_KEY = os.environ.get('SECRET_KEY')

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'menu_mapping'
]

ROOT_URLCONF = 'urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


DATABASES = {}


LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

STATIC_URL = '/static/'

APP_ENV = os.environ.get('APP_ENV')

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': ('rest_framework.renderers.JSONRenderer',),
    'EXCEPTION_HANDLER': 'etc.exception_handler.ExceptionHandler',
    'UNAUTHENTICATED_USER': None,
}

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('DB_FIN_PG_DATABASE'),
        'HOST': os.environ.get('DB_FIN_PG_HOST'),
        'PORT': os.environ.get('DB_FIN_PG_PORT'),
        'USER': os.environ.get('DB_FIN_PG_USERNAME'),
        'PASSWORD': os.environ.get('DB_FIN_PG_PASSWORD'),
        'OPTIONS': {'options': '-c search_path=public,deduction'},
    }
}

if os.getenv('APP_ENV') == 'local':
    SSH_HOST = os.getenv('SSH_HOST')
    SSH_PORT = int(os.getenv('SSH_PORT'))
    SSH_USER = os.getenv('SSH_USER')
    SSH_PRIVATE_KEY = os.getenv('SSH_PRIVATE_KEY')
    SSH_PASSPHRASE = os.getenv('SSH_PASSPHRASE')
    private_key = paramiko.RSAKey(filename=SSH_PRIVATE_KEY, password=SSH_PASSPHRASE)
    # Set up SSH tunnel
    tunnel = SSHTunnelForwarder(
        (SSH_HOST, SSH_PORT),
        ssh_username=SSH_USER,
        ssh_pkey=private_key,
        remote_bind_address=(os.environ.get('DB_FIN_PG_HOST'), int(os.environ.get('DB_FIN_PG_PORT'))))
    tunnel.start()
    DATABASES['default']['HOST'] = '127.0.0.1'
    DATABASES['default']['PORT'] = int(tunnel.local_bind_port)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    "formatters": {
        "zoho-adapter": {
            "format": "{levelname} {asctime} {module}:{filename}:{lineno} {message}",
            "style": "{",
        }
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': os.environ.get('LOG_FILE_PATH'),
            'formatter': 'zoho-adapter',
        },
        'console': {'class': 'logging.StreamHandler', 'formatter': 'zoho-adapter'},
    },
    'root': {
        'handlers': ['file', 'console'] if APP_ENV == 'local' else ['file'],
        'level': 'INFO',
    },
}
